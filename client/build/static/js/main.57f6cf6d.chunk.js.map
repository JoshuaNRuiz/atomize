{"version":3,"sources":["component/Controls/Controls.js","component/Tracklist/Track/Track.js","component/Tracklist/Tracklist.js","container/Tracker/Tracker.js","container/Login/Login.js","App.js","index.js"],"names":["Controls","props","className","htmlFor","id","name","onChange","handleTimeRangeChange","value","type","min","max","limit","onClick","refresh","handleLimitChange","handleRefresh","Track","title","artistName","artists","albumName","album","albumImage","images","url","rank","src","alt","Tracklist","tracklist","items","map","item","index","artist","key","Tracker","useState","isLoaded","setIsLoaded","setLimit","timeRange","setTimeRange","setItems","e","target","fetch","method","headers","accessToken","then","response","ok","alert","Error","json","data","catch","error","console","log","Login","encodeURIComponent","window","open","App","isLoggedIn","setLoginStatus","setAccessToken","useEffect","parameters","location","hash","substring","token","URLSearchParams","get","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57f6cf6d.chunk.js","sourcesContent":["import React from 'react';\nimport './Controls.css';\n\nconst Controls = (props) => {\n\n    return (\n        <div className='controls'>\n            <label htmlFor='time-range-input'>Time Range</label>\n            <select id='time-range-input' className='time-range-input' name='range' onChange={props.handleTimeRangeChange}>\n                <option value='long_term'>All time</option>\n                <option value='medium_term'>6 Months</option>\n                <option value='short_term'>4 Weeks</option>\n            </select>\n            <label htmlFor='limit-input'>#</label>\n            <input type='number' id='limit-input' className='limit-input' min={props.min} max={props.max} value={props.limit} onClick={props.refresh} onChange={props.handleLimitChange}/>\n            <button className='refresh-button' onClick={props.handleRefresh}>Refresh</button>\n        </div>\n    )\n}\n\nexport default Controls;","import React from 'react';\n\nimport './Track.css';\n\nconst Track = (props) => {\n\n    const title = props.title;\n    const artistName = props.artists;\n    const albumName = props.album.name;\n    const albumImage = props.album.images[0].url;\n    const rank = props.rank;\n\n    return (\n        <div className=\"track\" >\n            <img className='album-image' src={albumImage} alt='icon'/>\n            <div className=\"track-details\"> \n                <p className=\"title\">{title}</p>\n                <p className=\"artist-album\">{artistName} â€” {`${albumName}`} </p>\n            </div>\n            <p className=\"rank\">{rank}</p>\n        </div>\n    );\n}\n\nexport default Track;","import React from 'react';\nimport Track from './Track/Track.js'\n\nimport './Tracklist.css';\n\nconst Tracklist = (props) => {\n\n    const items = props.items;\n\n    const generateTracklist = () => {\n        let tracklist = items.map((item,index) => {\n            let title = item.name;\n            let artist = item.artists[0].name;\n            let album = item.album;\n            let rank = index + 1;\n            let key = title + artist;\n\n            return <Track key={key} title={title} artists={artist} album={album} rank={rank}/>\n        })\n        return tracklist;\n    }\n\n    const tracklist = generateTracklist();\n\n    return (\n        <div className='tracklist'>\n            {tracklist}\n        </div>\n    )\n}\n\nexport default Tracklist;","import React, {useState} from 'react';\nimport Controls from '../../component/Controls/Controls';\nimport Tracklist from '../../component/Tracklist/Tracklist';\nimport './Tracker.css'\n\nconst Tracker = (props) => {\n\n    const LIMIT_DEFAULT = 10;\n    const MIN_LIMIT = 1;\n    const MAX_LIMIT = 50;\n    const RANGE_DEFAULT = 'long_term';\n\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [limit, setLimit] = useState(LIMIT_DEFAULT);\n    const [timeRange, setTimeRange] = useState(RANGE_DEFAULT);\n    const [items, setItems] = useState([]);\n\n    const handleTimeRangeChange = (e) => {\n        setTimeRange(e.target.value);\n    }\n\n    const handleLimitChange = (e) => {\n        if (e.target.value > 50) {\n            e.target.value = 50;\n        } else if (e.target.value  < 0) {\n            e.target.value = 0\n        }\n        setLimit(e.target.value);\n    }\n\n    const handleRefresh = () => {\n        let url = `https://api.spotify.com/v1/me/top/tracks?time_range=${timeRange}&limit=${limit}&offset=0`\n        fetch(url, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + props.accessToken\n            },\n        })\n        .then(response => {\n            if (!response.ok) {\n                alert(\"Your authentication has expired.\");\n                throw new Error(\"Did not get a response from the server.\")\n            }\n            return response.json();\n        })\n        .then(data => {\n            setIsLoaded(true);\n            setItems(data.items)\n        })\n        .catch(error => {\n            console.log(error);\n        })\n    }\n\n    let tracklist = isLoaded ? <Tracklist items={items}/> : null\n\n    return (\n        <div className='tracker'>\n            <Controls \n                min={MIN_LIMIT} \n                max={MAX_LIMIT} \n                limit={limit} \n                handleTimeRangeChange={handleTimeRangeChange}\n                handleLimitChange={handleLimitChange}\n                handleRefresh={handleRefresh}/>\n            {tracklist}\n        </div>\n    )\n}\n\nexport default Tracker;","import React from 'react';\n\nconst Login = () => {\n\n    const client_id = '8e6f4d6f92d645d1b22ca1f6a8e8f371';\n    const redirect_uri = 'localhost:3000';\n    const scope = 'user-top-read';\n\n    let openSpotifyAuthorization = () => {\n        let url = 'https://accounts.spotify.com/authorize';\n        url += '?response_type=token';\n        url += '&client_id=' + encodeURIComponent(client_id);\n        url += '&scope=' + encodeURIComponent(scope);\n        url += '&redirect_uri=' + encodeURIComponent(redirect_uri);\n        window.open(url, \"_blank\");\n    };\n\n    return (\n        <div>\n            <p>To view your information, you must temporarily authorize this application to\n                access your Spotify information.</p>\n            <button onClick={openSpotifyAuthorization}>Login</button>\n        </div>\n    )\n}\n\nexport default Login;","import React, {useState, useEffect} from 'react';\nimport Tracker from './container/Tracker/Tracker'\nimport Login from './container/Login/Login'\n\nimport './App.css'\n\nfunction App() {\n  const [isLoggedIn, setLoginStatus] = useState(false);\n  const [accessToken, setAccessToken] = useState(null);\n\n  useEffect(() => {\n    let parameters = window.location.hash.substring(1);\n    let token = new URLSearchParams(parameters).get('access_token');\n    if (!!token) {\n      setAccessToken(token);\n      setLoginStatus(true)\n    } else {\n      setAccessToken(null);\n      setLoginStatus(false);\n    }\n  }, [isLoggedIn, accessToken]);\n\n  let container = isLoggedIn ? <Tracker accessToken={accessToken}/> : <Login />\n\n  return (\n    <div className=\"App\">\n      {container}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}